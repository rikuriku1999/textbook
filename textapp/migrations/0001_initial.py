# Generated by Django 3.0 on 2020-02-29 17:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import textapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', textapp.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Textbookmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('author', models.CharField(max_length=100)),
                ('images', models.ImageField(blank=True, default='noimage.jpg', null=True, upload_to='')),
                ('good', models.IntegerField(blank=True, default=0, null=True)),
                ('goodtext', models.CharField(blank=True, default='a', max_length=200, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('live', models.BooleanField(default=False)),
                ('price', models.IntegerField(default=0)),
                ('collegecategory', models.CharField(blank=True, max_length=30)),
                ('facultycategory', models.CharField(blank=True, max_length=30)),
                ('status', models.CharField(blank=True, max_length=30)),
                ('trading', models.BooleanField(default=False)),
                ('buyer', models.CharField(blank=True, max_length=30, null=True)),
                ('campus', models.CharField(blank=True, max_length=30, null=True)),
                ('sold', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Usermodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intro', models.TextField(blank=True, default='')),
                ('gender', models.CharField(blank=True, max_length=20)),
                ('college', models.CharField(blank=True, max_length=30)),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.OneToOneField(null='True', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Todomodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memo', models.CharField(max_length=30)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('types', models.CharField(max_length=20)),
                ('dopk', models.IntegerField(default=0)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textapp.Textbookmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textapp.Usermodel')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='Commentmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('author', models.CharField(blank=True, max_length=20)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textapp.Textbookmodel')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Chatroommodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer', models.CharField(max_length=20)),
                ('seller', models.CharField(max_length=20)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('target', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chatroomlist', to='textapp.Textbookmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Chatmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=30)),
                ('receiver', models.CharField(max_length=30)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.CharField(max_length=100)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='textapp.Chatroommodel')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
    ]
